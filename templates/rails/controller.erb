class <%= controller_name %> < ApplicationController
  before_action :set_<%= singular_table_name %>, only: [:show, :edit, :update, :destroy]
 
 def search
   @<%= plural_table_name %> = <%= model_name %>.where(:where => params[:where])
   
   @<%= plural_table_name %> = results.order(params[:order]) unless params[:order].nil?
   
   @<%= plural_table_name %> = results.limit(params[:limit]) unless params[:limit].nil?
   
   @<%= plural_table_name %> = results.offset(params[:offset]) unless params[:offset].nil?
   
 end
 
  # GET /<%= plural_table_name %>
  # GET /<%= plural_table_name %>.json
  def index
    @<%= plural_table_name %> = <%= model_name %>.all
  end

  # GET /<%= plural_table_name %>/1
  # GET /<%= plural_table_name %>/1.json
  def show
  end

  # GET /<%= plural_table_name %>/new
  def new
    @<%= singular_table_name %> = <%= model_name %>.new
  end

  # GET /<%= plural_table_name %>/1/edit
  def edit
  end

  # POST /<%= plural_table_name %>
  # POST /<%= plural_table_name %>.json
  def create
    @<%= singular_table_name %> = <%= model_name %>.new(<%= singular_table_name %>_params)

    respond_to do |format|
      if @<%= singular_table_name %>.save
        format.html { redirect_to @<%= singular_table_name %>, notice: '<%= model_name.titleize %> was successfully created.' }
        format.json { render action: 'show', status: :created, location: @<%= singular_table_name %> }
      else
        format.html { render action: 'new' }
        format.json { render json: @<%= singular_table_name %>.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /<%= plural_table_name %>/1
  # PATCH/PUT /<%= plural_table_name %>/1.json
  def update
    respond_to do |format|
      if @<%= singular_table_name %>.update(<%= singular_table_name %>_params)
        format.html { redirect_to @<%= singular_table_name %>, notice: '<%= model_name.titleize %> was successfully updated.' }
        format.json { head :no_content }
      else
        format.html { render action: 'edit' }
        format.json { render json: @<%= singular_table_name %>.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /<%= plural_table_name %>/1
  # DELETE /<%= plural_table_name %>/1.json
  def destroy
    @<%= singular_table_name %>.destroy
    respond_to do |format|
      format.html { redirect_to <%= plural_table_name %>_url }
      format.json { head :no_content }
    end
  end
 
  private
    # Use callbacks to share common setup or constraints between actions.
    def set_<%= singular_table_name %>
      @<%= singular_table_name %> = <%= model_name %>.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def <%= singular_table_name %>_params
    <% 
      column_symbols = []
      schema['columns'].keys.reject{|key| key == 'created_at'}.each do |key | 
        column_symbols << ":#{key}"
      end
    %>
      params.require(:<%= singular_table_name %>).permit( <%= column_symbols.join(', ') %>)
    end
end