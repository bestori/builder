<% 
default_namefield = nil
singlename = singular_table_name
columns = table_info['columns']

rejected_columns = fields.fetch(:except,[])

default_namefield = attributes.reject{|col| col.name =~ /_id/}.first

# determine the display field names
namefield = attributes.select{|col| ['name','title'].include?(col.name)}.first || default_namefield
descfield = attributes.select{|col|['description','info',
    'summary','comment','snippet'].include?(col.name) }.first

# convert the column array into a list of field names
field_names = attributes.map{|col| col.name  }

namefield_name = namefield.nil? ? nil : namefield.name
descfield_name = descfield.nil? ? nil : descfield.name

# override the defaults with a given field list
unless this_fields[:detail].nil?
  field_names = this_fields[:detail].map{|name| name.to_s  }
  
  namefield_name = field_names.select{|name| ['name','title'].include?(name)}.first 
  descfield_name = field_names.select{|name|['description','info',
    'summary','comment','snippet'].include?(name) }.first
end
%>


<div class="container-fluid">
    <!--
            enable if the class has a main image
    <img ng-src="{{mainImageUrl}}" class="<%= singlename %>">
    -->

    <% unless namefield_name.nil? %>
      <h1>{{<%= singlename %>.<%= namefield_name %>}}</h1>
    <% end %>
      
    <% unless descfield_name.nil? %>
      <p>{{<%= singlename %>.<%= descfield_name %>}}</p>
    <% end %>

    <!--          
            enable and rename accordingly if the class has an array of images
    <ul class="<%= singlename %>-thumbs">
      <li ng-repeat="img in <%= singlename %>.images">
        <img ng-src="{{img}}" ng-click="setImage(img)">
      </li>
    </ul>
    -->

    <div class="container-fluid">
        <span class="object-detail"><%= model_name.titleize %> Detail</span>

        <table class="<%= singlename %>-table detail-table">
            <tbody>
                <% field_names.each do |key| %>
                  <tr>
                      <th><%= key.titleize %> </th><td>{{<%= singlename %>.<%= key %>}}</td>
                  </tr>
                <% end %>

            </tbody>

        </table>

        <!-- include the standard links   [back, edit, new, delete, history] -->
        <div style="margin-top: 10px;">
            <a class="btn btn-inverse" onclick="javascript:history.go( - 1)">Back</a> 
            <a class="btn btn-warning" href="<%= angular_url(plural_table_name) %>/{{ <%= singlename %>.id }}/edit" >Edit</a>
            <a class="btn btn-success" href="<%= angular_url(plural_table_name) %>/new" >New</a>
            <a class="btn btn-danger" href="<%= angular_url(plural_table_name) %>/{{ <%= singlename %>.id }}/delete" data-confirm='Are you sure?'>Delete</a>
            
            <!--
              <a class="btn btn-primary" href="<%= angular_url(plural_table_name) %>/{{ <%= singlename %>.id }}/history" >History</a>

            -->

        </div>
    </div>
</div>

<hr/>

<div class="container-fluid">
    <h1>Related Objects</h1>

    <% 
    # remove some columns from related objects tables
    rejected_columns = ['id','updated_at','created_at','comments']

    #  get related objects  
    table_info['belongs_to'].flatten.uniq.each do |key| 
      relation = key.singularize
      relname = key.singularize
      columns = schema[key]['columns']
      field_names = columns.keys.reject{|key| rejected_columns.include?(key)  }
      
      myfields = fields.fetch(:list,Hash.new).fetch(key.to_sym,nil)
      
      unless myfields.nil?
        field_names = myfields.map{|name| name.to_s  }
      end
    %>
      <div class="container related-objects belongs-to-related-objects <%= key %>-related-objects">
          <h2><%= key.to_model_name.pluralize %></h2>
          <table class="<%= relname %>-table list-table table-striped">
              <thead>
                  <tr>

                      <th><!-- link column --></th>

                      <% field_names.each do |key| %>
                        <th><%= key.titleize %> </th>
                      <% end %>
                  </tr>
              </thead>

              <tbody> 
                  <tr ng-repeat="<%= relname %> in <%= singlename %>.<%= relation %>  |  limitTo: 50" ng-class="rowClass(<%= relname %>)">

                      <td>
                          <a href="/#/<%= namespace.nil? ? "" : namespace + '/' %><%= key %>/{{<%= relname %>.id}}" >
                              <i class="glyphicon glyphicon-search"></i>
                          </a>
                      </td>

                      <% field_names.each do |key| %>
                        <td>{{<%= relname %>.<%= key %>}}</td>
                      <% end %>
                  </tr>
              </tbody>

          </table>
      </div>
    <%  end %>

    <%
    table_info['has_many'].flatten.uniq.each do |key| 
      relation = key.pluralize
      relname = key.singularize
      columns = schema[key]['columns']
      field_names = columns.keys.reject{|key| rejected_columns.include?(key)  }
      
      myfields = fields.fetch(:list,Hash.new).fetch(key.to_sym,nil)
      
      unless myfields.nil?
        field_names = myfields.map{|name| name.to_s  }
      end
    %>
      <div class="container related-objects has-many-related-objects <%= key %>-related-objects">
          <h2><%= key.to_model_name.pluralize %></h2>
          <table class="<%= relname %>-table list-table table-striped">
              <thead>
                  <tr>

                      <th><!-- link column --></th>

                      <% field_names.each do |key| %>
                        <th><%= key.titleize %> </th>
                      <% end %>
                  </tr>
              </thead>

              <tbody> 
                  <tr ng-repeat="<%= relname %> in <%= singlename %>.<%= relation %>  |  limitTo: 50" ng-class="rowClass(<%= relname %>)">

                      <td>
                          <a href="/#/<%= namespace.nil? ? "" : namespace + '/' %><%= key %>/{{<%= relname %>.id}}" >
                              <i class="glyphicon glyphicon-search"></i>
                          </a>
                      </td>

                      <% field_names.each do |key| %>
                        <td>{{<%= relname %>.<%= key %>}}</td>
                      <% end %>
                  </tr>
              </tbody>

          </table>
      </div>
    <%  end %>
</div>