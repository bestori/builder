<% 
default_namefield = nil
singlename = singular_table_name
columns = schema['columns']

rejected_columns = ['id','updated_at','updated_by','comments']

columns.each_pair do |name,column| 
  # get the name of the first field that is not called 'id' as default  
  if default_namefield.nil? && name != 'id'  && name !~ /_id/  
    # use this column unless it is the id primary key or a foreign key
    default_namefield = column
  end 
end 

# determine the display field names
namefield = columns['name'] || columns['title'] || default_namefield
descfield = columns['description'] || columns['info'] || 
  columns['summary'] || columns['comment'] || columns['snippet']
%>

<!--
        enable if the class has a main image
<img ng-src="{{mainImageUrl}}" class="<%= singlename %>">
-->

<h1>{{<%= singlename %>.<%= namefield['column_name'] %>}}</h1>

<% unless descfield.nil? %>
  <p>{{<%= singlename %>.descfield['column_name']}}</p>
<% end %>

<!--          
        enable and rename accordingly if the class has an array of images
<ul class="<%= singlename %>-thumbs">
  <li ng-repeat="img in <%= singlename %>.images">
    <img ng-src="{{img}}" ng-click="setImage(img)">
  </li>
</ul>
-->

<span><%= model_name.titleize %> Detail</span>



<table class="<%= model_name %>">
  <tbody>
    <% columns.keys.reject{|key| rejected_columns.include?(key)  }.each do |key| %>
      <tr>
        <th><%= key.titleize %> </th><td>{{<%= singlename %>.<%= key %>}}</td>
      </tr>
    <% end %>

  </tbody>

</table>